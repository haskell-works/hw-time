name: Binaries

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        ghc: ["9.0.1", "8.10.7", "8.8.4", "8.6.5"]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 3.4.0.0

      - name: Set some window specific things
        if: matrix.os == 'windows-latest'
        run: echo 'EXE_EXT=.exe' >> $GITHUB_ENV

      - name: Configure project
        run: cabal configure --enable-tests --enable-benchmarks --write-ghc-environment-files=ghc8.4.4+

      - name: Restore cabal cache
        uses: haskell-works/cabal-cache-action@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BINARY_CACHE_REGION: ${{ secrets.BINARY_CACHE_REGION }}
          BINARY_CACHE_THREADS: ${{ secrets.BINARY_CACHE_THREADS }}
          BINARY_CACHE_URI: ${{ secrets.BINARY_CACHE_URI }}
        with:
          args: |
            sync-from-archive \
              --threads       "$BINARY_CACHE_THREADS" \
              --archive-uri   "$BINARY_CACHE_URI" \
              --region        "$BINARY_CACHE_REGION" \
              --store-path    "${{ steps.setup-haskell.outputs.cabal-store }}"

      - name: Build
        # Try building it twice in case of flakey builds on Windows
        run: |
          cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=ghc8.4.4+ || \
          cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=ghc8.4.4+ -j1

      - name: Test
        run: |
          cabal test all --enable-tests --enable-benchmarks --write-ghc-environment-files=ghc8.4.4+

      - name: Save cabal cache
        uses: haskell-works/cabal-cache-action@v1
        if: ${{ always() }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BINARY_CACHE_REGION: ${{ secrets.BINARY_CACHE_REGION }}
          BINARY_CACHE_THREADS: ${{ secrets.BINARY_CACHE_THREADS }}
          BINARY_CACHE_URI: ${{ secrets.BINARY_CACHE_URI }}
        with:
          args: |
            sync-to-archive \
              --threads       "$BINARY_CACHE_THREADS" \
              --archive-uri   "$BINARY_CACHE_URI" \
              --region        "$BINARY_CACHE_REGION" \
              --store-path    "${{ steps.setup-haskell.outputs.cabal-store }}"

  check:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - uses: actions/checkout@v2

      - name: Check if cabal project is sane
        run: |
          PROJECT_DIR=$PWD
          mkdir -p $PROJECT_DIR/build/sdist
          for i in $(git ls-files | grep '\.cabal'); do
            cd $PROJECT_DIR && cd `dirname $i`
            cabal check
          done
